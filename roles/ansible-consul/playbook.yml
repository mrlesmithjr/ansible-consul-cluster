---
- hosts: all
  become: true
  vars:
    - pri_domain_name: 'test.vagrant.local'
  roles:
  tasks:
    - name: pre-reqs (RedHat)
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - dnf
        - python-dnf
      when: >
            (ansible_os_family == "RedHat" and
            ansible_distribution != "Fedora")

    - name: pre-reqs
      dnf:
        name: "{{ item }}"
        state: present
      with_items:
        - libselinux-python
      when: ansible_os_family == "RedHat"

    - name: updating /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: "^{{ hostvars[item]['ansible_ssh_host'] }} {{ item }} {{ item }}.{{ pri_domain_name }}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }} {{ item }} {{ item }}.{{ pri_domain_name }}"
        state: "present"
      with_items: '{{ groups.all }}'

- hosts: all
  become: true
  vars:
    consul_bind_interface: 'enp0s8'
    consul_ui: true
    install_nginx: true
    install_redis: true
    pri_domain_name: 'test.vagrant.local'
    redis_replication_ansible_group: 'redis_replicator' # from nodes.yml
    redis_replication_interface: '{{ consul_bind_interface }}'
    consul_services:
      - name: elasticsearch
        port: 9200
        tags:
          - elasticsearch
          - es
          - testing
        checks:
          - id: 'es-check'
          - name: 'elasticsearch check'
          - interval: 10s
          - script: 'curl localhost:9200 > /dev/null 2>&1'
      # - name: mysql
      #   port: 3306
      #   tags:
      #     - mysql
      #     - testing
      #   checks:
      #     - interval: 10s
      #     - script: "mysql -u{{ consul_mysql_user }} -p{{ consul_mysql_password }} -h localhost -e 'select now()'"
      # - name: nginx
      #   port: 80
      #   tags:
      #     - nginx
      #     # - testing
      #   checks:
      #     - interval: 10s
      #     - script: 'curl localhost:80 > /dev/null 2>&1'
      - name: redis
        port: 6379
        tags:
          - redis
          - testing
        checks:
          - id: 'redis-check'
          - name: 'redis check'
          - interval: 10s
          - script: '/var/lib/redis/bin/redis-cli ping'
  roles:
    - role: ansible-nginx
      when: >
            inventory_hostname not in groups[consul_servers_group] and
            (install_nginx is defined and
            install_nginx)
    - role: ansible-ntp
    - role: ansible-redis
      when: >
            inventory_hostname not in groups[consul_servers_group] and
            (install_redis is defined and
            install_redis)
    - role: ansible-consul
      tags:
        - 'consul'
  tasks:
    - name: uninstalling nginx (if not install_nginx)
      apt:
        name: "nginx"
        state: "absent"
      when: >
            inventory_hostname not in groups[consul_servers_group] and
            (install_nginx is defined and
            not install_nginx)

    - name: uninstalling redis (if not install_redis)
      apt:
        name: "redis"
        state: "absent"
      when: >
            inventory_hostname not in groups[consul_servers_group] and
            (install_redis is defined and
            not install_redis)
